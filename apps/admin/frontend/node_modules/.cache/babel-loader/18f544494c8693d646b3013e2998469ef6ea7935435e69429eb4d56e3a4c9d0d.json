{"ast":null,"code":"// apps/admin/frontend/src/services/api.ts\n\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000/api/v1\",\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response$data, _error$response2;\n  const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || \"An error occurred\";\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    if (window.location.pathname !== '/login') {\n      window.location.href = \"/login\";\n    }\n    toast.error(\"Sesi berakhir. Silakan login kembali.\");\n  } else if (error.code !== \"ERR_CANCELED\") {\n    toast.error(message);\n  }\n  return Promise.reject(error);\n});\n\n// =========================================================\n// API SERVICES\n// =========================================================\n\nexport const authAPI = {\n  login: async credentials => {\n    const response = await api.post(\"/auth/admin/login\", credentials);\n    return response.data;\n  },\n  updateProfile: async userData => {\n    const response = await api.put(\"/auth/admin/profile\", userData);\n    return response.data;\n  }\n  // Tambahkan fungsi API lain yang Anda butuhkan\n};\nexport const settingAPI = {\n  getSettings: async () => {\n    const response = await api.get(\"/settings\");\n    return response.data;\n  },\n  updateSettings: async settingsData => {\n    const response = await api.put(\"/settings\", settingsData);\n    return response.data;\n  }\n};\nexport const aiAPI = {\n  sendChatMessage: async message => {\n    const response = await api.post(\"/ai/chat\", {\n      message\n    });\n    return response.data;\n  }\n};\n\n// Pastikan Anda juga mengekspor objek API lain jika ada, contoh:\n// export const dashboardAPI = { ... };\n// export const patientAPI = { ... };\n\nexport default api;","map":{"version":3,"names":["axios","toast","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response$data","_error$response2","message","data","status","removeItem","window","location","pathname","href","code","authAPI","login","credentials","post","updateProfile","userData","put","settingAPI","getSettings","get","updateSettings","settingsData","aiAPI","sendChatMessage"],"sources":["C:/Sehatify/apps/admin/frontend/src/services/api.ts"],"sourcesContent":["// apps/admin/frontend/src/services/api.ts\n\nimport axios, { type AxiosInstance, type AxiosResponse, type AxiosError } from \"axios\"\nimport toast from \"react-hot-toast\"\nimport type { \n  User, \n  AuthResponse, \n  LoginCredentials, \n  ChangePasswordData, \n  ApiResponse, \n  Setting,\n  ChatApiResponse\n} from \"../types\" \n\nconst api: AxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000/api/v1\", \n  timeout: 10000,\n  headers: { \"Content-Type\": \"application/json\" },\n})\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\napi.interceptors.response.use(\n  (response: AxiosResponse) => response,\n  (error: AxiosError) => {\n    const message = (error.response?.data as any)?.message || error.message || \"An error occurred\"\n    if (error.response?.status === 401) {\n      localStorage.removeItem(\"token\")\n      localStorage.removeItem(\"user\")\n      if (window.location.pathname !== '/login') {\n        window.location.href = \"/login\"\n      }\n      toast.error(\"Sesi berakhir. Silakan login kembali.\")\n    } else if (error.code !== \"ERR_CANCELED\") {\n        toast.error(message)\n    }\n    return Promise.reject(error)\n  },\n)\n\n// =========================================================\n// API SERVICES\n// =========================================================\n\nexport const authAPI = {\n  login: async (credentials: LoginCredentials): Promise<AuthResponse> => {\n    const response = await api.post<AuthResponse>(\"/auth/admin/login\", credentials) \n    return response.data\n  },\n  updateProfile: async (userData: Partial<User>): Promise<ApiResponse<{ user: User }>> => {\n    const response = await api.put<ApiResponse<{ user: User }>>(\"/auth/admin/profile\", userData)\n    return response.data;\n  },\n  // Tambahkan fungsi API lain yang Anda butuhkan\n}\n\nexport const settingAPI = {\n  getSettings: async (): Promise<ApiResponse<Setting>> => {\n    const response = await api.get(\"/settings\");\n    return response.data;\n  },\n  updateSettings: async (settingsData: Partial<Setting>): Promise<ApiResponse<Setting>> => {\n    const response = await api.put(\"/settings\", settingsData);\n    return response.data;\n  }\n}\n\nexport const aiAPI = {\n  sendChatMessage: async (message: string): Promise<ChatApiResponse> => {\n    const response = await api.post<ChatApiResponse>(\"/ai/chat\", { message });\n    return response.data;\n  },\n};\n\n// Pastikan Anda juga mengekspor objek API lain jika ada, contoh:\n// export const dashboardAPI = { ... };\n// export const patientAPI = { ... };\n\nexport default api"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}