{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Sehatify\\\\apps\\\\admin\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { authAPI } from \"../services/api.tsx\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const savedToken = localStorage.getItem(\"token\");\n        const savedUser = localStorage.getItem(\"user\");\n        console.log(\"Initializing auth state:\", {\n          hasToken: !!savedToken,\n          hasUser: !!savedUser\n        });\n        if (savedToken && savedUser) {\n          const parsedUser = JSON.parse(savedUser);\n          setToken(savedToken);\n          setUser(parsedUser);\n\n          // Verify token is still valid\n          try {\n            var _response$data;\n            const response = await authAPI.verifyToken();\n            if (response.success && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.user) {\n              setUser(response.data.user);\n              localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n            }\n          } catch (error) {\n            console.error(\"Token verification failed:\", error);\n            // Clear invalid token\n            localStorage.removeItem(\"token\");\n            localStorage.removeItem(\"user\");\n            setToken(null);\n            setUser(null);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error initializing auth state:\", error);\n        // Clear corrupted data\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n        setToken(null);\n        setUser(null);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      setIsLoading(true);\n      console.log(\"AuthContext login called with:\", {\n        email: credentials.email\n      });\n      const response = await authAPI.login(credentials);\n      if (response.success && response.data) {\n        const {\n          user: userData,\n          token: userToken\n        } = response.data;\n\n        // Set state\n        setUser(userData);\n        setToken(userToken);\n\n        // Save to localStorage\n        localStorage.setItem(\"token\", userToken);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        console.log(\"Login successful:\", {\n          user: userData.name,\n          role: userData.role\n        });\n        toast.success(`Welcome back, ${userData.name}!`);\n      } else {\n        throw new Error(response.message || \"Login failed\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || \"Login failed\";\n      toast.error(message);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const demoLogin = async () => {\n    try {\n      setIsLoading(true);\n      console.log(\"Demo login initiated\");\n      const response = await authAPI.demoLogin();\n      if (response.success && response.data) {\n        const {\n          user: userData,\n          token: userToken\n        } = response.data;\n\n        // Set state\n        setUser(userData);\n        setToken(userToken);\n\n        // Save to localStorage\n        localStorage.setItem(\"token\", userToken);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        console.log(\"Demo login successful:\", {\n          user: userData.name,\n          role: userData.role\n        });\n        toast.success(`Demo login successful! Welcome, ${userData.name}`);\n      } else {\n        throw new Error(response.message || \"Demo login failed\");\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Demo login error:\", error);\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || \"Demo login failed\";\n      toast.error(message);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    console.log(\"Logging out user\");\n\n    // Clear state\n    setUser(null);\n    setToken(null);\n\n    // Clear localStorage\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    toast.success(\"Logged out successfully\");\n\n    // Redirect to login\n    window.location.href = \"/login\";\n  };\n  const updateUser = async userData => {\n    try {\n      var _response$data2;\n      setIsLoading(true);\n      const response = await authAPI.updateProfile(userData);\n      if (response.success && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.user) {\n        const updatedUser = response.data.user;\n        setUser(updatedUser);\n        localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n        console.log(\"User updated successfully:\", updatedUser);\n        toast.success(\"Profile updated successfully\");\n      } else {\n        throw new Error(response.message || \"Failed to update profile\");\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Error updating user:\", error);\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message || \"Failed to update profile\";\n      toast.error(message);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const refreshUser = async () => {\n    try {\n      var _response$data3;\n      if (!token) return;\n      const response = await authAPI.getProfile();\n      if (response.success && (_response$data3 = response.data) !== null && _response$data3 !== void 0 && _response$data3.user) {\n        setUser(response.data.user);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      }\n    } catch (error) {\n      console.error(\"Error refreshing user:\", error);\n    }\n  };\n  const isAuthenticated = !!user && !!token;\n\n  // Debug logging\n  useEffect(() => {\n    console.log(\"Auth state changed:\", {\n      isAuthenticated,\n      hasUser: !!user,\n      hasToken: !!token,\n      isLoading,\n      userRole: user === null || user === void 0 ? void 0 : user.role\n    });\n  }, [user, token, isAuthenticated, isLoading]);\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    isLoading,\n    login,\n    demoLogin,\n    logout,\n    updateUser,\n    refreshUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"PiwoDeqPRCsfRwdePw8UHQ38Ar0=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","context","Error","AuthProvider","children","user","setUser","token","setToken","isLoading","setIsLoading","initializeAuth","savedToken","localStorage","getItem","savedUser","console","log","hasToken","hasUser","parsedUser","JSON","parse","_response$data","response","verifyToken","success","data","setItem","stringify","error","removeItem","login","credentials","email","userData","userToken","name","role","message","_error$response","_error$response$data","demoLogin","_error$response2","_error$response2$data","logout","window","location","href","updateUser","_response$data2","updateProfile","updatedUser","_error$response3","_error$response3$data","refreshUser","_response$data3","getProfile","isAuthenticated","userRole","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Sehatify/apps/admin/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { createContext, useContext, useState, useEffect, type ReactNode } from \"react\"\nimport { authAPI } from \"../services/api.tsx\"\nimport type { User, LoginCredentials } from \"../types.tsx\"\nimport toast from \"react-hot-toast\"\n\ninterface AuthContextType {\n  user: User | null\n  token: string | null\n  isAuthenticated: boolean\n  isLoading: boolean\n  login: (credentials: LoginCredentials) => Promise<void>\n  demoLogin: () => Promise<void>\n  logout: () => void\n  updateUser: (userData: Partial<User>) => Promise<void>\n  refreshUser: () => Promise<void>\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\ninterface AuthProviderProps {\n  children: ReactNode\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null)\n  const [token, setToken] = useState<string | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const savedToken = localStorage.getItem(\"token\")\n        const savedUser = localStorage.getItem(\"user\")\n\n        console.log(\"Initializing auth state:\", {\n          hasToken: !!savedToken,\n          hasUser: !!savedUser,\n        })\n\n        if (savedToken && savedUser) {\n          const parsedUser = JSON.parse(savedUser)\n          setToken(savedToken)\n          setUser(parsedUser)\n\n          // Verify token is still valid\n          try {\n            const response = await authAPI.verifyToken()\n            if (response.success && response.data?.user) {\n              setUser(response.data.user)\n              localStorage.setItem(\"user\", JSON.stringify(response.data.user))\n            }\n          } catch (error) {\n            console.error(\"Token verification failed:\", error)\n            // Clear invalid token\n            localStorage.removeItem(\"token\")\n            localStorage.removeItem(\"user\")\n            setToken(null)\n            setUser(null)\n          }\n        }\n      } catch (error) {\n        console.error(\"Error initializing auth state:\", error)\n        // Clear corrupted data\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"user\")\n        setToken(null)\n        setUser(null)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    initializeAuth()\n  }, [])\n\n  const login = async (credentials: LoginCredentials) => {\n    try {\n      setIsLoading(true)\n      console.log(\"AuthContext login called with:\", { email: credentials.email })\n\n      const response = await authAPI.login(credentials)\n\n      if (response.success && response.data) {\n        const { user: userData, token: userToken } = response.data\n\n        // Set state\n        setUser(userData)\n        setToken(userToken)\n\n        // Save to localStorage\n        localStorage.setItem(\"token\", userToken)\n        localStorage.setItem(\"user\", JSON.stringify(userData))\n\n        console.log(\"Login successful:\", { user: userData.name, role: userData.role })\n        toast.success(`Welcome back, ${userData.name}!`)\n      } else {\n        throw new Error(response.message || \"Login failed\")\n      }\n    } catch (error: any) {\n      console.error(\"Login error:\", error)\n      const message = error.response?.data?.message || error.message || \"Login failed\"\n      toast.error(message)\n      throw error\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const demoLogin = async () => {\n    try {\n      setIsLoading(true)\n      console.log(\"Demo login initiated\")\n\n      const response = await authAPI.demoLogin()\n\n      if (response.success && response.data) {\n        const { user: userData, token: userToken } = response.data\n\n        // Set state\n        setUser(userData)\n        setToken(userToken)\n\n        // Save to localStorage\n        localStorage.setItem(\"token\", userToken)\n        localStorage.setItem(\"user\", JSON.stringify(userData))\n\n        console.log(\"Demo login successful:\", { user: userData.name, role: userData.role })\n        toast.success(`Demo login successful! Welcome, ${userData.name}`)\n      } else {\n        throw new Error(response.message || \"Demo login failed\")\n      }\n    } catch (error: any) {\n      console.error(\"Demo login error:\", error)\n      const message = error.response?.data?.message || error.message || \"Demo login failed\"\n      toast.error(message)\n      throw error\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const logout = () => {\n    console.log(\"Logging out user\")\n\n    // Clear state\n    setUser(null)\n    setToken(null)\n\n    // Clear localStorage\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"user\")\n\n    toast.success(\"Logged out successfully\")\n\n    // Redirect to login\n    window.location.href = \"/login\"\n  }\n\n  const updateUser = async (userData: Partial<User>) => {\n    try {\n      setIsLoading(true)\n\n      const response = await authAPI.updateProfile(userData)\n\n      if (response.success && response.data?.user) {\n        const updatedUser = response.data.user\n        setUser(updatedUser)\n        localStorage.setItem(\"user\", JSON.stringify(updatedUser))\n\n        console.log(\"User updated successfully:\", updatedUser)\n        toast.success(\"Profile updated successfully\")\n      } else {\n        throw new Error(response.message || \"Failed to update profile\")\n      }\n    } catch (error: any) {\n      console.error(\"Error updating user:\", error)\n      const message = error.response?.data?.message || error.message || \"Failed to update profile\"\n      toast.error(message)\n      throw error\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const refreshUser = async () => {\n    try {\n      if (!token) return\n\n      const response = await authAPI.getProfile()\n      if (response.success && response.data?.user) {\n        setUser(response.data.user)\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user))\n      }\n    } catch (error) {\n      console.error(\"Error refreshing user:\", error)\n    }\n  }\n\n  const isAuthenticated = !!user && !!token\n\n  // Debug logging\n  useEffect(() => {\n    console.log(\"Auth state changed:\", {\n      isAuthenticated,\n      hasUser: !!user,\n      hasToken: !!token,\n      isLoading,\n      userRole: user?.role,\n    })\n  }, [user, token, isAuthenticated, isLoading])\n\n  const value: AuthContextType = {\n    user,\n    token,\n    isAuthenticated,\n    isLoading,\n    login,\n    demoLogin,\n    logout,\n    updateUser,\n    refreshUser,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}