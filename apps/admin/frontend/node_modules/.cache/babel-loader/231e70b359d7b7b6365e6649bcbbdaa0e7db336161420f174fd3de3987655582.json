{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Sehatify\\\\apps\\\\admin\\\\frontend\\\\src\\\\contexts\\\\NotificationContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext(undefined);\nexport const useNotifications = () => {\n  _s();\n  const context = useContext(NotificationContext);\n  if (context === undefined) {\n    throw new Error(\"useNotifications must be used within a NotificationProvider\");\n  }\n  return context;\n};\n_s(useNotifications, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, setNotifications] = useState([{\n    id: \"1\",\n    type: \"warning\",\n    title: \"Stok Rendah\",\n    message: \"5 item obat memiliki stok di bawah minimum\",\n    time: \"2 menit yang lalu\",\n    unread: true\n  }, {\n    id: \"2\",\n    type: \"info\",\n    title: \"Jadwal Dokter\",\n    message: \"Dr. Sarah akan terlambat 30 menit hari ini\",\n    time: \"15 menit yang lalu\",\n    unread: true\n  }, {\n    id: \"3\",\n    type: \"success\",\n    title: \"Backup Selesai\",\n    message: \"Backup database berhasil dilakukan\",\n    time: \"1 jam yang lalu\",\n    unread: false\n  }]);\n  const unreadCount = notifications.filter(n => n.unread).length;\n  const addNotification = notification => {\n    const newNotification = {\n      ...notification,\n      id: Date.now().toString(),\n      time: \"Baru saja\",\n      unread: true\n    };\n    setNotifications(prev => [newNotification, ...prev]);\n  };\n  const markAsRead = id => {\n    setNotifications(prev => prev.map(notification => notification.id === id ? {\n      ...notification,\n      unread: false\n    } : notification));\n  };\n  const markAllAsRead = () => {\n    setNotifications(prev => prev.map(notification => ({\n      ...notification,\n      unread: false\n    })));\n  };\n  const removeNotification = id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n  const value = {\n    notifications,\n    unreadCount,\n    addNotification,\n    markAsRead,\n    markAllAsRead,\n    removeNotification\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n};\n_s2(NotificationProvider, \"jHsSA9UxrRxKPBkDq6eoeow5BkI=\");\n_c = NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","jsxDEV","_jsxDEV","NotificationContext","undefined","useNotifications","context","Error","NotificationProvider","children","notifications","setNotifications","id","type","title","message","time","unread","unreadCount","filter","n","length","addNotification","notification","newNotification","Date","now","toString","prev","markAsRead","map","markAllAsRead","removeNotification","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Sehatify/apps/admin/frontend/src/contexts/NotificationContext.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { createContext, useContext, useState } from \"react\"\n\ninterface Notification {\n  id: string\n  type: \"info\" | \"warning\" | \"success\" | \"error\"\n  title: string\n  message: string\n  time: string\n  unread: boolean\n}\n\ninterface NotificationContextType {\n  notifications: Notification[]\n  unreadCount: number\n  addNotification: (notification: Omit<Notification, \"id\" | \"time\" | \"unread\">) => void\n  markAsRead: (id: string) => void\n  markAllAsRead: () => void\n  removeNotification: (id: string) => void\n}\n\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined)\n\nexport const useNotifications = () => {\n  const context = useContext(NotificationContext)\n  if (context === undefined) {\n    throw new Error(\"useNotifications must be used within a NotificationProvider\")\n  }\n  return context\n}\n\nexport const NotificationProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [notifications, setNotifications] = useState<Notification[]>([\n    {\n      id: \"1\",\n      type: \"warning\",\n      title: \"Stok Rendah\",\n      message: \"5 item obat memiliki stok di bawah minimum\",\n      time: \"2 menit yang lalu\",\n      unread: true,\n    },\n    {\n      id: \"2\",\n      type: \"info\",\n      title: \"Jadwal Dokter\",\n      message: \"Dr. Sarah akan terlambat 30 menit hari ini\",\n      time: \"15 menit yang lalu\",\n      unread: true,\n    },\n    {\n      id: \"3\",\n      type: \"success\",\n      title: \"Backup Selesai\",\n      message: \"Backup database berhasil dilakukan\",\n      time: \"1 jam yang lalu\",\n      unread: false,\n    },\n  ])\n\n  const unreadCount = notifications.filter((n) => n.unread).length\n\n  const addNotification = (notification: Omit<Notification, \"id\" | \"time\" | \"unread\">) => {\n    const newNotification: Notification = {\n      ...notification,\n      id: Date.now().toString(),\n      time: \"Baru saja\",\n      unread: true,\n    }\n    setNotifications((prev) => [newNotification, ...prev])\n  }\n\n  const markAsRead = (id: string) => {\n    setNotifications((prev) =>\n      prev.map((notification) => (notification.id === id ? { ...notification, unread: false } : notification)),\n    )\n  }\n\n  const markAllAsRead = () => {\n    setNotifications((prev) => prev.map((notification) => ({ ...notification, unread: false })))\n  }\n\n  const removeNotification = (id: string) => {\n    setNotifications((prev) => prev.filter((notification) => notification.id !== id))\n  }\n\n  const value = {\n    notifications,\n    unreadCount,\n    addNotification,\n    markAsRead,\n    markAllAsRead,\n    removeNotification,\n  }\n\n  return <NotificationContext.Provider value={value}>{children}</NotificationContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}