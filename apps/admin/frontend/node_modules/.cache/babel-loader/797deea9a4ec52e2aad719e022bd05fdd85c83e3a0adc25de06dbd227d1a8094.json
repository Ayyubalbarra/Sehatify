{"ast":null,"code":"// File: src/services/api.ts\n\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\n// Menggunakan .ts untuk tipe\n\n// Buat instance axios\nconst api = axios.create({\n  // [FIX 1] Menggunakan baseURL yang benar dengan /api/v1\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000/api/v1\",\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Request interceptor untuk menambahkan token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor untuk menangani error global\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response$data, _error$response2;\n  const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || \"An error occurred\";\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    window.location.href = \"/login\";\n    toast.error(\"Sesi berakhir. Silakan login kembali.\");\n  } else {\n    var _error$response3;\n    // Tidak menampilkan toast untuk error 404 agar tidak duplikat dengan pesan di halaman\n    if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) !== 404) {\n      toast.error(message);\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Auth API (Tidak ada perubahan)\nexport const authAPI = {\n  login: async credentials => {\n    const response = await api.post(\"/auth/login\", credentials);\n    return response.data;\n  }\n  // ... fungsi auth lainnya ...\n};\n\n// [FIX 2] Dashboard API diperbarui untuk mencocokkan rute backend baru\nexport const dashboardAPI = {\n  getOverview: async () => {\n    const response = await api.get(\"/dashboard/overview\");\n    return response.data;\n  },\n  getChartData: async type => {\n    const response = await api.get(`/dashboard/charts?type=${type}`);\n    return response.data;\n  }\n};\n\n// Patient API (Tidak ada perubahan)\nexport const patientAPI = {\n  // ... fungsi patient lainnya ...\n};\n\n// ...dan API lainnya\n\nexport default api;","map":{"version":3,"names":["axios","toast","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response$data","_error$response2","message","data","status","removeItem","window","location","href","_error$response3","authAPI","login","credentials","post","dashboardAPI","getOverview","get","getChartData","type","patientAPI"],"sources":["C:/Sehatify/apps/admin/frontend/src/services/api.ts"],"sourcesContent":["// File: src/services/api.ts\n\nimport axios, { type AxiosInstance, type AxiosResponse, type AxiosError } from \"axios\"\nimport toast from \"react-hot-toast\"\nimport type {\n  ApiResponse,\n  PaginatedResponse,\n  User,\n  AuthResponse,\n  LoginCredentials,\n  DashboardInsights, // Anda mungkin perlu menyesuaikan tipe ini nanti\n  Patient,\n  Doctor,\n  InventoryItem,\n  Queue,\n  Visit,\n  FilterOptions,\n} from \"../types.ts\" // Menggunakan .ts untuk tipe\n\n// Buat instance axios\nconst api: AxiosInstance = axios.create({\n  // [FIX 1] Menggunakan baseURL yang benar dengan /api/v1\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000/api/v1\",\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n})\n\n// Request interceptor untuk menambahkan token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\n// Response interceptor untuk menangani error global\napi.interceptors.response.use(\n  (response: AxiosResponse) => response,\n  (error: AxiosError) => {\n    const message = (error.response?.data as any)?.message || error.message || \"An error occurred\"\n    if (error.response?.status === 401) {\n      localStorage.removeItem(\"token\")\n      localStorage.removeItem(\"user\")\n      window.location.href = \"/login\"\n      toast.error(\"Sesi berakhir. Silakan login kembali.\")\n    } else {\n      // Tidak menampilkan toast untuk error 404 agar tidak duplikat dengan pesan di halaman\n      if (error.response?.status !== 404) {\n        toast.error(message)\n      }\n    }\n    return Promise.reject(error)\n  },\n)\n\n// Auth API (Tidak ada perubahan)\nexport const authAPI = {\n  login: async (credentials: LoginCredentials): Promise<AuthResponse> => {\n    const response = await api.post<AuthResponse>(\"/auth/login\", credentials)\n    return response.data\n  },\n  // ... fungsi auth lainnya ...\n}\n\n// [FIX 2] Dashboard API diperbarui untuk mencocokkan rute backend baru\nexport const dashboardAPI = {\n  getOverview: async (): Promise<ApiResponse<any>> => {\n    const response = await api.get<ApiResponse<any>>(\"/dashboard/overview\")\n    return response.data\n  },\n  getChartData: async (type: string): Promise<ApiResponse<any>> => {\n    const response = await api.get<ApiResponse<any>>(`/dashboard/charts?type=${type}`)\n    return response.data\n  },\n}\n\n// Patient API (Tidak ada perubahan)\nexport const patientAPI = {\n  // ... fungsi patient lainnya ...\n}\n\n// ...dan API lainnya\n\nexport default api"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAmE,OAAO;AACtF,OAAOC,KAAK,MAAM,iBAAiB;AAcd;;AAErB;AACA,MAAMC,GAAkB,GAAGF,KAAK,CAACG,MAAM,CAAC;EACtC;EACAC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,8BAA8B;EACxEC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAhB,GAAG,CAACQ,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAuB,IAAKA,QAAQ,EACpCH,KAAiB,IAAK;EAAA,IAAAI,eAAA,EAAAC,oBAAA,EAAAC,gBAAA;EACrB,MAAMC,OAAO,GAAG,EAAAH,eAAA,GAACJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBI,IAAI,cAAAH,oBAAA,uBAArBA,oBAAA,CAA+BE,OAAO,KAAIP,KAAK,CAACO,OAAO,IAAI,mBAAmB;EAC9F,IAAI,EAAAD,gBAAA,GAAAN,KAAK,CAACG,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBG,MAAM,MAAK,GAAG,EAAE;IAClCZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChCb,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IAC/B9B,KAAK,CAACiB,KAAK,CAAC,uCAAuC,CAAC;EACtD,CAAC,MAAM;IAAA,IAAAc,gBAAA;IACL;IACA,IAAI,EAAAA,gBAAA,GAAAd,KAAK,CAACG,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBL,MAAM,MAAK,GAAG,EAAE;MAClC1B,KAAK,CAACiB,KAAK,CAACO,OAAO,CAAC;IACtB;EACF;EACA,OAAON,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMe,OAAO,GAAG;EACrBC,KAAK,EAAE,MAAOC,WAA6B,IAA4B;IACrE,MAAMd,QAAQ,GAAG,MAAMnB,GAAG,CAACkC,IAAI,CAAe,aAAa,EAAED,WAAW,CAAC;IACzE,OAAOd,QAAQ,CAACK,IAAI;EACtB;EACA;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,YAAY,GAAG;EAC1BC,WAAW,EAAE,MAAAA,CAAA,KAAuC;IAClD,MAAMjB,QAAQ,GAAG,MAAMnB,GAAG,CAACqC,GAAG,CAAmB,qBAAqB,CAAC;IACvE,OAAOlB,QAAQ,CAACK,IAAI;EACtB,CAAC;EACDc,YAAY,EAAE,MAAOC,IAAY,IAAgC;IAC/D,MAAMpB,QAAQ,GAAG,MAAMnB,GAAG,CAACqC,GAAG,CAAmB,0BAA0BE,IAAI,EAAE,CAAC;IAClF,OAAOpB,QAAQ,CAACK,IAAI;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMgB,UAAU,GAAG;EACxB;AAAA,CACD;;AAED;;AAEA,eAAexC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}